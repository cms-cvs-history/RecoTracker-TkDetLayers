process GeometryTest = {
  service = MessageLogger 
  {
  untracked vstring destinations   = { "debugmessages.txt"
                                       ,"cout"
                                       ,"cerr"
                                     }
  untracked vstring categories     = { "TkDetLayers" }
  untracked vstring debugModules   = { "analyzer" }
  untracked PSet debugmessages.txt = { untracked string threshold = "DEBUG"
                                       untracked PSet INFO            = { untracked int32 limit = 0 }
                                       untracked PSet DEBUG           = { untracked int32 limit = 0 }
  			               untracked PSet TkDetLayers = { untracked int32 limit = 10000000}
                                     }
      untracked PSet cout   =  { untracked bool placeholder = true }

      untracked PSet cerr    = {
                                 untracked string threshold = "WARNING"
                                 untracked PSet default = { untracked int32 limit = 10000000  }
                               }
  } 

  replace MessageLogger.cout.placeholder = "INFO"

  #cat debugmessages.txt | grep -v MSG | grep -v "Run:" | grep -v analyzer > debug.readable

  untracked PSet maxEvents = {untracked int32 input = 1}
  source = EmptySource {}

  #ideal Geometry
  include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"

  # use MTCC geomerty
  #include "Geometry/CMSCommonData/data/cmsMTCCGeometryXML.cfi"

  include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
  include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
  include "RecoTracker/GeometryESProducer/data/TrackerRecoGeometryESProducer.cfi"


  module analyzer =  TkDetLayersAnalyzer {}
  path p1 = {analyzer}      
}  

